<?xml version="1.0"?>
<robot name="orpheus_x4" xmlns:xacro="http://ros.org/wiki/xacro">

	
  <!-- Konstanty robota -->
  <xacro:property name="base_width" value="0.35"/>
  <xacro:property name="base_length" value="0.40"/>
  <xacro:property name="base_height" value="0.23"/>

  <xacro:property name="wheel_radius" value="0.0475"/>
  <xacro:property name="wheel_width" value="0.03"/>
  <xacro:property name="wheel_ygap" value="0.015"/>
  <xacro:property name="wheel_zoff" value="0.135"/>
  <xacro:property name="wheel_xoff" value="0.0"/>

  <xacro:property name="caster_xoff" value="0.14"/>


<!-- Define intertial property macros  -->

  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>
  
 <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>


<!-- Telo robota -->

  <link name="base_link">
    <visual>
      <geometry>
        	<!-- <box size="${base_length} ${base_width} ${base_height}"/> -->
        <mesh scale=" 0.001 0.001 0.001" filename="file://$(find robot_models)/meshes/loki/Loki_base.stl"/> <!-- filename="package://orpheus_x4_description/src/meshes/Base_orpheus_x4.stl" -->
      </geometry>
      <material name="Gray">
        <color rgba="0.85 0.87 0.88 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

   <xacro:box_inertia m="40" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>
  
  
<!-- Stred stopy robota -->
  
  <link name="base_footprint"/>
    <joint name="base_joint" type="fixed">
    	<parent link="base_link"/>
    	<child link="base_footprint"/>
    	<origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
    </joint>
 
<!-- Deska na uchyceni prisluenstvi -->
  
  <link name="mounting_plate_link">
    <visual>
      <geometry>
        <!-- <box size="${base_length} ${base_width} 0.01"/> -->
        <mesh scale=" 0.001 0.001 0.001" filename="file://$(find robot_models)/meshes/loki/Loki_mount_plate.stl"/>
      </geometry>
      <material name="Gray1">
        <color rgba="0.85 0.87 0.88 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} 0.001"/>
      </geometry>
    </collision>
  <xacro:box_inertia m="1" w="${base_width}" d="${base_length}" h="0.01"/>
  </link> 
  
  <joint name="mounting_plate_joint" type="fixed">
    <parent link="base_link"/>
    <child link="mounting_plate_link"/>
    <origin xyz="0.0 0.0 ${(base_height/2)}" rpy="0 0 0"/>
  </joint>
  
  
<!-- Kola -->
    
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
  <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
        	<mesh scale=" 0.001 0.001 0.001"  filename="file://$(find robot_models)/meshes/loki/Loki_wheel.stl"/>
        </geometry>
         <material name="Gray2">
        <color rgba="0.3 0.3 0.3 1"/>
        </material>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
        	<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

  <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>  
  </link>

	<gazebo reference="${prefix}_link">
		<mu1 value="1.0"/>
		<mu2 value="1.0"/>
		<kp value="10000000.0"/>
		<kd value="1.0"/>
		<fdir1 value=" 1 0 0"/>
	</gazebo>


    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
    		<transmission name="${prefix}_trans" type="SimpleTransmission">
			<type>transmission_interface/SimpleTransmission</type>
			<actuator name="${prefix}_wheel_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
			<joint name="${prefix}_joint">
				<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
			</joint>
		</transmission>
    
  

  </xacro:macro>
  
  <!-- Nastaveni pozic jednotlivych kol -->
  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

	<!-- Caster Wheels -->
	
	<link name="front_caster">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
  </link>

  <joint name="front_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>



	<link name="rear_caster">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
  </link>

  <joint name="rear_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_caster"/>
    <origin xyz="${-caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>




	<gazebo reference="base_link">
		<material>Gazebo/Gray</material>
	</gazebo>
	<gazebo reference="drivewhl_l_link">
		<material>Gazebo/Gray</material>
	</gazebo>
	<gazebo reference="drivewhl_r_link">
		<material>Gazebo/Gray</material>
	</gazebo>
	<gazebo reference="mounting_plate_link">
		<material>Gazebo/Gray</material>
	</gazebo>

	
	
	<gazebo>
  	  <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
    		<ros>
      			<namespace>/demo</namespace>
    		</ros>
	<!-- Pocet paru kol -->
    		<num_wheel_pairs>1</num_wheel_pairs>
    
	<!-- Kola -->
    		<left_joint>drivewhl_l_joint</left_joint>
    		<right_joint>drivewhl_r_joint</right_joint>
    

	<!-- kinematika -->
    		<wheel_separation>0.35</wheel_separation>
    		<wheel_diameter>0.095</wheel_diameter>


	<!-- limity -->
    		<max_wheel_torque>20</max_wheel_torque>
    		<max_wheel_acceleration>1.0</max_wheel_acceleration>

	<!-- vystup -->
    		<publish_odom>true</publish_odom>
    		<publish_odom_tf>true</publish_odom_tf>
    		<publish_wheel_tf>true</publish_wheel_tf>

    		<odometry_frame>odom</odometry_frame>
    		<robot_base_frame>base_link</robot_base_frame>
  	  </plugin>
	</gazebo>

  
</robot>
